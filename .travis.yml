sudo: required
dist: xenial
language: python
git:
  depth: 10
  quiet: true
python:
  - "2.7"
  - "3.6"
env:
  global:
    - CODECOV_TOKEN="0d2c482b-f42c-4d4c-b092-cb628ad20857"
    - BAZEL_VERSION=0.20.0
    - COVERAGE_PROCESS_START=$PWD/.coveragerc
  matrix:
    # We test against recent versions of TensorFlow and tf-nightly.

    # Quick test suite.
    - TF_VERSION="1.13.*" SUITE="quick"
    - TF_VERSION="tf-nightly" SUITE="quick"
    - TF_VERSION="2.0.0-alpha0" SUITE="quick"
    - TF_VERSION="tf-nightly-2.0-preview" SUITE="quick"

    # E2E Tests.
    - TF_VERSION="1.13.*" SUITE="e2e"
    - TF_VERSION="tf-nightly" SUITE="e2e"
    - TF_VERSION="2.0.0-alpha0" SUITE="e2e"
    - TF_VERSION="tf-nightly-2.0-preview" SUITE="e2e"

matrix:
  allow_failures:
    - python: "2.7"
      env: TF_VERSION="2.0.0-alpha0" SUITE="quick"
    - python: "2.7"
      env: TF_VERSION="2.0.0-alpha0" SUITE="e2e"
    - python: "3.6"
      env: TF_VERSION="2.0.0-alpha0" SUITE="quick"
    - python: "3.6"
      env: TF_VERSION="2.0.0-alpha0" SUITE="e2e"
    - python: "2.7"
      env: TF_VERSION="tf-nightly-2.0-preview" SUITE="quick"
    - python: "2.7"
      env: TF_VERSION="tf-nightly-2.0-preview" SUITE="e2e"
    - python: "3.6"
      env: TF_VERSION="tf-nightly-2.0-preview" SUITE="quick"
    - python: "3.6"
      env: TF_VERSION="tf-nightly-2.0-preview" SUITE="e2e"

before_install:
  - sudo apt-get -y install pkg-config zip g++ zlib1g-dev unzip
  - wget https://github.com/bazelbuild/bazel/releases/download/"$BAZEL_VERSION"/bazel-"$BAZEL_VERSION"-installer-linux-x86_64.sh
  - chmod +x bazel-"$BAZEL_VERSION"-installer-linux-x86_64.sh
  - ./bazel-"$BAZEL_VERSION"-installer-linux-x86_64.sh --user
addons:
  apt:
    update: true
install:
  - pip install -r requirements.txt
  - pip install numpy --upgrade
  - pip install coverage-enable-subprocess
  - ./oss_scripts/oss_pip_install.sh
script:
  - |
    if [ $SUITE == "e2e" ]; then
      NOSE_EXCLUDE='.*workers.*' nosetests adanet/core/estimator_distributed_test.py
    else
      NOSE_EXCLUDE='.*nasnet.*.py|.*test_distributed_training.*' nosetests
    fi
  - cat /tmp/absl_testing/**/*.txt || true  # Don't error if file does not exist.
after_success:
  # Install codecov for tracking coverage over time.
  - pip install codecov
  - codecov
